{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilan\\\\dev\\\\palpi\\\\toran-app\\\\DayDuty\\\\src\\\\Components\\\\Toranim.jsx\";\nimport React, { Component } from \"react\"; // import Select, { components } from \"react-select\";\n\nimport makeAnimated from \"react-select/animated\";\nimport Axios from \"axios\";\nimport \"../CSS/Toranim.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Select } from \"antd\";\nconst toranim = [\"A\", \"B\", \"C\", \"D\", \"E\"]; // const animatedComponents = makeAnimated();\n\nconst week_days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wendsday\", \"Thursday\", \"Friday\", \"Saturday\"];\nconst groupStyles = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\"\n};\nconst groupBadgeStyles = {\n  backgroundColor: \"#EBECF0\",\n  borderRadius: \"2em\",\n  color: \"#172B4D\",\n  display: \"inline-block\",\n  fontSize: 12,\n  fontWeight: \"normal\",\n  lineHeight: \"1\",\n  minWidth: 1,\n  padding: \"0.16666666666667em 0.5em\",\n  textAlign: \"center\"\n};\n\nconst formatGroupLabel = data => React.createElement(\"div\", {\n  style: groupStyles,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, data.label), React.createElement(\"span\", {\n  style: groupBadgeStyles,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, data.options.length));\n\nconst addOptions = (date, day) => {\n  let items = [];\n\n  for (var i = 0; i < toranim.length; i++) {\n    items.push(React.createElement(\"option\", {\n      label: toranim[i],\n      value: date,\n      key: i,\n      day: day,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, toranim[i])); // for (var i = 0; i < toranim.length; i++) {\n    //   items.push({\n    //     label: toranim[i],\n    //     value: date,\n    //     key: i,\n    //     day: day\n    //   });\n    // }\n  }\n\n  return items;\n};\n\nclass Toranim extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = target_toran => {\n      console.log(target_toran); // var url = \"http://localhost:5000/set_toran\";\n      // let tmp_toranim = this.state.toran_daily;\n      // tmp_toranim[target_toran[\"day\"]] = target_toran[\"label\"];\n      // console.log(tmp_toranim);\n      // this.setState({\n      //   toran_daily: tmp_toranim\n      // });\n      // fetch(url, {\n      //   method: \"post\",\n      //   headers: {\n      //     Accept: \"application/json\",\n      //     \"Content-Type\": \"application/json\"\n      //   },\n      //   body: JSON.stringify(target_toran)\n      // }).then(res => {\n      //   console.log(res.data);\n      // });\n    };\n\n    this.setDates = () => {\n      console.log(\"passed\");\n      console.log(this.props.date);\n      this.setState({\n        dates: this.props.date\n      });\n    };\n\n    this.generateTable = () => {\n      let res = [];\n      res.push(React.createElement(\"tr\", {\n        key: \"date_header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.setForEachDay()));\n      return res;\n    };\n\n    this.disableClick = disable => {\n      this.setState({\n        disableClick: disable\n      });\n      return true;\n    };\n\n    this.handleSelect = e => {\n      e.stopPropagation();\n    };\n\n    this.setForEachDay = () => {\n      let dates = this.props.date;\n      let week_items = [];\n      var toranim_cur_week = this.getToranimCurrentWeek(dates);\n      console.log(\"rendered again\");\n      week_items.push(React.createElement(\"th\", {\n        key: \"empty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Toran\"));\n\n      for (var i = 0; i < dates.length; i++) {\n        week_items.push(React.createElement(\"td\", {\n          key: dates[i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, addOptions(dates[i], i)))));\n      }\n\n      week_items.push(React.createElement(\"td\", {\n        key: \"Yashvatz\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Select, {\n        id: \"Yashvatz\",\n        defaultValue: \"-1\",\n        onChange: this.handleChange,\n        options: addOptions(\"yashvatz-\" + dates[0] + \"-\" + dates[dates.length - 1], 7),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })));\n      return week_items;\n    };\n\n    this.generateHeader = cur_date => {\n      let header_days = [];\n      header_days.push(React.createElement(\"th\", {\n        key: \"empty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }));\n\n      for (var i = 0; i < cur_date.length + 1; i++) {\n        if (i != cur_date.length) {\n          header_days.push(React.createElement(\"th\", {\n            className: \"toran_days\",\n            key: cur_date[i],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          }, week_days[i] + \"\\n\" + cur_date[i]));\n        } else {\n          header_days.push(React.createElement(\"th\", {\n            className: \"toran_days\",\n            key: \"Yashvtaz\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }, \"Weekly Yachvatz\"));\n        }\n      }\n\n      return header_days;\n    };\n\n    var date = new Date();\n    this.state = {\n      dates: props.date,\n      toran_daily: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]\n    };\n  }\n\n  componentWillMount() {\n    console.log(\"ytred\");\n  }\n\n  getToranimCurrentWeek(dates) {\n    console.log(dates);\n    var url = new URL(\"http://localhost:5000/get_toranim\");\n    var params = {\n      dates: dates\n    };\n    url.search = new URLSearchParams(params).toString();\n    fetch(url).then(res => {\n      console.log(res.data);\n    });\n  }\n\n  render() {\n    var cur_date = this.props.date;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, console.log(\"444444\"), console.log(this.props.date), React.createElement(\"table\", {\n      id: \"Toranim\",\n      className: \"table table-border cell-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      style: {\n        pointerEvents: this.state.disableClick ? \"none\" : \"all\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, this.generateHeader(this.props.date))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, this.generateTable()))));\n  }\n\n}\n\nexport default Toranim;","map":{"version":3,"sources":["C:/Users/ilan/dev/palpi/toran-app/DayDuty/src/Components/Toranim.jsx"],"names":["React","Component","makeAnimated","Axios","Select","toranim","week_days","groupStyles","display","alignItems","justifyContent","groupBadgeStyles","backgroundColor","borderRadius","color","fontSize","fontWeight","lineHeight","minWidth","padding","textAlign","formatGroupLabel","data","label","options","length","addOptions","date","day","items","i","push","Toranim","constructor","props","handleChange","target_toran","console","log","setDates","setState","dates","generateTable","res","setForEachDay","disableClick","disable","handleSelect","e","stopPropagation","week_items","toranim_cur_week","getToranimCurrentWeek","generateHeader","cur_date","header_days","Date","state","toran_daily","componentWillMount","url","URL","params","search","URLSearchParams","toString","fetch","then","render","pointerEvents"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n// import Select, { components } from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport Axios from \"axios\";\r\nimport \"../CSS/Toranim.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Select } from \"antd\";\r\n\r\nconst toranim = [\"A\", \"B\", \"C\", \"D\", \"E\"];\r\n// const animatedComponents = makeAnimated();\r\nconst week_days = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wendsday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\"\r\n];\r\n\r\nconst groupStyles = {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"space-between\"\r\n};\r\nconst groupBadgeStyles = {\r\n  backgroundColor: \"#EBECF0\",\r\n  borderRadius: \"2em\",\r\n  color: \"#172B4D\",\r\n  display: \"inline-block\",\r\n  fontSize: 12,\r\n  fontWeight: \"normal\",\r\n  lineHeight: \"1\",\r\n  minWidth: 1,\r\n  padding: \"0.16666666666667em 0.5em\",\r\n  textAlign: \"center\"\r\n};\r\n\r\nconst formatGroupLabel = data => (\r\n  <div style={groupStyles}>\r\n    <span>{data.label}</span>\r\n    <span style={groupBadgeStyles}>{data.options.length}</span>\r\n  </div>\r\n);\r\nconst addOptions = (date, day) => {\r\n  let items = [];\r\n\r\n  for (var i = 0; i < toranim.length; i++) {\r\n    items.push(\r\n      <option label={toranim[i]} value={date} key={i} day={day}>\r\n        {toranim[i]}\r\n      </option>\r\n    );\r\n    // for (var i = 0; i < toranim.length; i++) {\r\n    //   items.push({\r\n    //     label: toranim[i],\r\n    //     value: date,\r\n    //     key: i,\r\n    //     day: day\r\n    //   });\r\n    // }\r\n  }\r\n  return items;\r\n};\r\n\r\nclass Toranim extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var date = new Date();\r\n    this.state = {\r\n      dates: props.date,\r\n      toran_daily: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"ytred\");\r\n  }\r\n  handleChange = target_toran => {\r\n    console.log(target_toran);\r\n    // var url = \"http://localhost:5000/set_toran\";\r\n\r\n    // let tmp_toranim = this.state.toran_daily;\r\n    // tmp_toranim[target_toran[\"day\"]] = target_toran[\"label\"];\r\n\r\n    // console.log(tmp_toranim);\r\n    // this.setState({\r\n    //   toran_daily: tmp_toranim\r\n    // });\r\n\r\n    // fetch(url, {\r\n    //   method: \"post\",\r\n    //   headers: {\r\n    //     Accept: \"application/json\",\r\n    //     \"Content-Type\": \"application/json\"\r\n    //   },\r\n\r\n    //   body: JSON.stringify(target_toran)\r\n    // }).then(res => {\r\n    //   console.log(res.data);\r\n    // });\r\n  };\r\n\r\n  setDates = () => {\r\n    console.log(\"passed\");\r\n    console.log(this.props.date);\r\n    this.setState({\r\n      dates: this.props.date\r\n    });\r\n  };\r\n  generateTable = () => {\r\n    let res = [];\r\n    res.push(<tr key=\"date_header\">{this.setForEachDay()}</tr>);\r\n    return res;\r\n  };\r\n\r\n  getToranimCurrentWeek(dates) {\r\n    console.log(dates);\r\n\r\n    var url = new URL(\"http://localhost:5000/get_toranim\");\r\n\r\n    var params = { dates: dates };\r\n    url.search = new URLSearchParams(params).toString();\r\n\r\n    fetch(url).then(res => {\r\n      console.log(res.data);\r\n    });\r\n  }\r\n  disableClick = disable => {\r\n    this.setState({ disableClick: disable });\r\n    return true;\r\n  };\r\n  handleSelect = e => {\r\n    e.stopPropagation();\r\n  };\r\n  setForEachDay = () => {\r\n    let dates = this.props.date;\r\n    let week_items = [];\r\n\r\n    var toranim_cur_week = this.getToranimCurrentWeek(dates);\r\n    console.log(\"rendered again\");\r\n    week_items.push(<th key=\"empty\">Toran</th>);\r\n    for (var i = 0; i < dates.length; i++) {\r\n      week_items.push(\r\n        <td key={dates[i]}>\r\n          <div>\r\n            <select onChange={this.handleChange}>\r\n              {addOptions(dates[i], i)}\r\n            </select>\r\n\r\n            {/* <Select\r\n              className=\"mt-4 col-md-8 col-offset-4\"\r\n              id={dates[i]}\r\n              value={this.state.toran_daily[\"day\"]}\r\n              onChange={this.handleChange}\r\n              options={addOptions(dates[i], i)}\r\n            ></Select> */}\r\n          </div>\r\n        </td>\r\n      );\r\n    }\r\n    week_items.push(\r\n      <td key=\"Yashvatz\">\r\n        <Select\r\n          id=\"Yashvatz\"\r\n          defaultValue=\"-1\"\r\n          onChange={this.handleChange}\r\n          options={addOptions(\r\n            \"yashvatz-\" + dates[0] + \"-\" + dates[dates.length - 1],\r\n            7\r\n          )}\r\n        ></Select>\r\n      </td>\r\n    );\r\n\r\n    return week_items;\r\n  };\r\n\r\n  generateHeader = cur_date => {\r\n    let header_days = [];\r\n    header_days.push(<th key=\"empty\"></th>);\r\n    for (var i = 0; i < cur_date.length + 1; i++) {\r\n      if (i != cur_date.length) {\r\n        header_days.push(\r\n          <th className=\"toran_days\" key={cur_date[i]}>\r\n            {week_days[i] + \"\\n\" + cur_date[i]}\r\n          </th>\r\n        );\r\n      } else {\r\n        header_days.push(\r\n          <th className=\"toran_days\" key=\"Yashvtaz\">\r\n            Weekly Yachvatz\r\n          </th>\r\n        );\r\n      }\r\n    }\r\n    return header_days;\r\n  };\r\n\r\n  render() {\r\n    var cur_date = this.props.date;\r\n    return (\r\n      <div>\r\n        <div>\r\n          {console.log(\"444444\")}\r\n          {console.log(this.props.date)}\r\n          <table id=\"Toranim\" className=\"table table-border cell-border\">\r\n            <thead\r\n              style={{\r\n                pointerEvents: this.state.disableClick ? \"none\" : \"all\"\r\n              }}\r\n            >\r\n              <tr>{this.generateHeader(this.props.date)}</tr>\r\n            </thead>\r\n            <tbody>{this.generateTable()}</tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toranim;\r\n"]},"metadata":{},"sourceType":"module"}