{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilan\\\\dev\\\\palpi\\\\toran-app\\\\DayDuty\\\\src\\\\Components\\\\Toranim.jsx\";\nimport React, { Component } from \"react\";\nimport Select, { components } from \"react-select\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Table from \"react-bootstrap/Button\";\nimport \"../CSS/Toranim.css\";\nimport fetch_toranim from \"./DataFetch\";\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\"; // const toranim = [\"A\", \"B\", \"C\", \"D\", \"E\"];\n// // const animatedComponents = makeAnimated();\n// const { Option } = Select;\n// const addOptions = (date, day) => {\n//   let items = [];\n//   for (var i = 0; i < toranim.length; i++) {\n//     // items.push({ label: toranim[i], value: date, key: i, day: day });\n//     items.push(\n//       <option label={toranim[i]} value={date} key={i} day={day}>\n//         {toranim[i]}\n//       </option>\n//     );\n//   }\n//   return items;\n// };\n\nconst toranim = [\"A\", \"B\", \"C\", \"D\", \"E\"]; // const animatedComponents = makeAnimated();\n\nconst week_days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wendsday\", \"Thursday\", \"Friday\", \"Saturday\"];\nconst Option = Select.Option;\n\nconst addOptions = (date, day) => {\n  let items = [];\n\n  for (var i = 0; i < toranim.length; i++) {\n    // items.push({ label: toranim[i], value: date, key: i, day: day });\n    items.push(React.createElement(\"option\", {\n      label: toranim[i],\n      value: date,\n      key: i,\n      day: day,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, toranim[i]));\n  }\n\n  return items;\n};\n\nconst handleChange = target_toran => {\n  console.log(\"hettt\");\n  let index = target_toran.nativeEvent.target.selectedIndex;\n  let label = target_toran.nativeEvent.target[index].text;\n  let value = target_toran.target.value;\n  console.log(label, value);\n  var url = \"http://localhost:5000/set_toran\";\n  let toran_json_data = {\n    label: label,\n    value: value\n  };\n  fetch(url, {\n    method: \"post\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(toran_json_data)\n  }).then(res => {\n    console.log(res);\n  });\n};\n\nconst generateTable = dates => {\n  let toran_select = [];\n  let result_toranim_cur_week;\n  let res, res_js; // res = await fetch_toranim(dates);\n  // res_js = await res.json();\n  // console.log(res);\n  // Promise.all([fetch_toranim(dates)]).then((values) => {\n  //   console.log(values[0]);\n  //   toran_select.push(\n  //     <tr key=\"date_header\">{setForEachDay(values[0], dates)}</tr>\n  //   );\n  // });\n  // return toran_select;\n  // setForEachDay(values[0], dates)\n  // fetch_toranim(dates).then((res) => {\n  //   console.log(res);\n  //   console.log(toran_select);\n  // });\n\n  console.log(\"hhhhhhhhhhhhhhhhhhhh\");\n};\n\nconst setForEachDay = (toranim_this_week, dates_of_week) => {\n  let week_items = [];\n  let dates = dates_of_week;\n  console.log(\"rendered again\");\n  week_items.push(React.createElement(\"th\", {\n    key: \"empty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Toran\"));\n\n  for (var i = 0; i < dates.length; i++) {\n    {\n      console.log(toranim_this_week, dates[i]);\n    }\n    week_items.push(React.createElement(\"td\", {\n      key: dates[i],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, console.log(Object.keys(toranim_this_week).includes(dates[i]) ? toranim_this_week[dates[i]] : \"DEFAULT\"), React.createElement(\"select\", {\n      value: Object.keys(toranim_this_week).includes(dates[i]) ? toranim_this_week[dates[i]] : \"DEFAULT\",\n      onChange: handleChange,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"DEFAULT\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Select Toran...\", \" \"), addOptions(dates[i], i))));\n  }\n\n  week_items.push(React.createElement(\"td\", {\n    key: \"Yashvatz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    onChange: handleChange,\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Select Toran...\", \" \"), addOptions(\"yashvatz-\" + dates[0] + \"-\" + dates[dates.length - 1], 7), \" \")));\n  console.log(week_items.__html);\n  return week_items;\n};\n\nconst generateHeader = props => {\n  let cur_date = props;\n  console.log(cur_date);\n  let header_days = [];\n  header_days.push(React.createElement(\"th\", {\n    key: \"empty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }));\n\n  for (var i = 0; i < cur_date.length + 1; i++) {\n    if (i != cur_date.length) {\n      header_days.push(React.createElement(\"th\", {\n        align: \"center\",\n        className: \"toran_days\",\n        key: cur_date[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, week_days[i] + \"\\n\" + cur_date[i]));\n    } else {\n      header_days.push(React.createElement(\"th\", {\n        align: \"center\",\n        className: \"toran_days\",\n        key: \"Yashvtaz\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Weekly Yachvatz\"));\n      console.log(\"added yashcvatz\");\n    }\n  }\n\n  return header_days;\n};\n\nclass Toranim extends Component {\n  constructor(props) {\n    super(props);\n\n    this.generateTable = async dates => {\n      let toran_select = [];\n      let result_toranim_cur_week;\n      let res, res_js;\n      res = await fetch_toranim(dates);\n      res_js = await res.json();\n      console.log(res); // Promise.all([fetch_toranim(dates)]).then((values) => {\n      //   console.log(values[0]);\n      //   toran_select.push(\n      //     <tr key=\"date_header\">{setForEachDay(values[0], dates)}</tr>\n      //   );\n      // });\n      // return toran_select;\n      // setForEachDay(values[0], dates)\n      // fetch_toranim(dates).then((res) => {\n      //   console.log(res);\n      //   console.log(toran_select);\n      // });\n\n      console.log(\"hhhhhhhhhhhhhhhhhhhh\");\n    };\n\n    this.state = {\n      is_ok_backend: true,\n      is_loading: false\n    };\n  }\n\n  async componentDidMount() {\n    let response, data;\n    response = await fetch_toranim(this.props.date);\n    data = await res.json();\n    console.log(data);\n  }\n\n  render() {\n    var cur_date = this.props.date;\n    console.log(\"lol\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(MDBTable, {\n      striped: true,\n      bordered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(MDBTableHead, {\n      color: \"primary-color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, generateHeader(this.props.date))), React.createElement(MDBTableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, generateTable(this.props.date))));\n  }\n\n}\n\nexport default Toranim;","map":{"version":3,"sources":["C:/Users/ilan/dev/palpi/toran-app/DayDuty/src/Components/Toranim.jsx"],"names":["React","Component","Select","components","Table","fetch_toranim","MDBTable","MDBTableBody","MDBTableHead","toranim","week_days","Option","addOptions","date","day","items","i","length","push","handleChange","target_toran","console","log","index","nativeEvent","target","selectedIndex","label","text","value","url","toran_json_data","fetch","method","headers","Accept","body","JSON","stringify","then","res","generateTable","dates","toran_select","result_toranim_cur_week","res_js","setForEachDay","toranim_this_week","dates_of_week","week_items","Object","keys","includes","__html","generateHeader","props","cur_date","header_days","Toranim","constructor","json","state","is_ok_backend","is_loading","componentDidMount","response","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Select, { components } from \"react-select\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Table from \"react-bootstrap/Button\";\r\nimport \"../CSS/Toranim.css\";\r\nimport fetch_toranim from \"./DataFetch\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\n\r\n// const toranim = [\"A\", \"B\", \"C\", \"D\", \"E\"];\r\n// // const animatedComponents = makeAnimated();\r\n\r\n// const { Option } = Select;\r\n\r\n// const addOptions = (date, day) => {\r\n//   let items = [];\r\n\r\n//   for (var i = 0; i < toranim.length; i++) {\r\n//     // items.push({ label: toranim[i], value: date, key: i, day: day });\r\n//     items.push(\r\n//       <option label={toranim[i]} value={date} key={i} day={day}>\r\n//         {toranim[i]}\r\n//       </option>\r\n//     );\r\n//   }\r\n\r\n//   return items;\r\n// };\r\n\r\nconst toranim = [\"A\", \"B\", \"C\", \"D\", \"E\"];\r\n// const animatedComponents = makeAnimated();\r\nconst week_days = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wendsday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\nconst { Option } = Select;\r\n\r\nconst addOptions = (date, day) => {\r\n  let items = [];\r\n\r\n  for (var i = 0; i < toranim.length; i++) {\r\n    // items.push({ label: toranim[i], value: date, key: i, day: day });\r\n    items.push(\r\n      <option label={toranim[i]} value={date} key={i} day={day}>\r\n        {toranim[i]}\r\n      </option>\r\n    );\r\n  }\r\n\r\n  return items;\r\n};\r\n\r\nconst handleChange = (target_toran) => {\r\n  console.log(\"hettt\");\r\n  let index = target_toran.nativeEvent.target.selectedIndex;\r\n  let label = target_toran.nativeEvent.target[index].text;\r\n  let value = target_toran.target.value;\r\n  console.log(label, value);\r\n  var url = \"http://localhost:5000/set_toran\";\r\n  let toran_json_data = { label: label, value: value };\r\n  fetch(url, {\r\n    method: \"post\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n\r\n    body: JSON.stringify(toran_json_data),\r\n  }).then((res) => {\r\n    console.log(res);\r\n  });\r\n};\r\n\r\nconst generateTable = (dates) => {\r\n  let toran_select = [];\r\n  let result_toranim_cur_week;\r\n  let res, res_js;\r\n\r\n  // res = await fetch_toranim(dates);\r\n  // res_js = await res.json();\r\n  // console.log(res);\r\n  // Promise.all([fetch_toranim(dates)]).then((values) => {\r\n  //   console.log(values[0]);\r\n  //   toran_select.push(\r\n  //     <tr key=\"date_header\">{setForEachDay(values[0], dates)}</tr>\r\n  //   );\r\n  // });\r\n  // return toran_select;\r\n  // setForEachDay(values[0], dates)\r\n\r\n  // fetch_toranim(dates).then((res) => {\r\n  //   console.log(res);\r\n  //   console.log(toran_select);\r\n  // });\r\n  console.log(\"hhhhhhhhhhhhhhhhhhhh\");\r\n};\r\n\r\nconst setForEachDay = (toranim_this_week, dates_of_week) => {\r\n  let week_items = [];\r\n  let dates = dates_of_week;\r\n  console.log(\"rendered again\");\r\n  week_items.push(<th key=\"empty\">Toran</th>);\r\n  for (var i = 0; i < dates.length; i++) {\r\n    {\r\n      console.log(toranim_this_week, dates[i]);\r\n    }\r\n    week_items.push(\r\n      <td key={dates[i]}>\r\n        {console.log(\r\n          Object.keys(toranim_this_week).includes(dates[i])\r\n            ? toranim_this_week[dates[i]]\r\n            : \"DEFAULT\"\r\n        )}\r\n        <select\r\n          value={\r\n            Object.keys(toranim_this_week).includes(dates[i])\r\n              ? toranim_this_week[dates[i]]\r\n              : \"DEFAULT\"\r\n          }\r\n          onChange={handleChange}\r\n          className=\"form-control\"\r\n        >\r\n          <option value=\"DEFAULT\" disabled>\r\n            Select Toran...{\" \"}\r\n          </option>\r\n          {addOptions(dates[i], i)}\r\n        </select>\r\n      </td>\r\n    );\r\n  }\r\n  week_items.push(\r\n    <td key=\"Yashvatz\">\r\n      <select onChange={handleChange} className=\"form-control\">\r\n        <option selected disabled>\r\n          Select Toran...{\" \"}\r\n        </option>\r\n        {addOptions(\"yashvatz-\" + dates[0] + \"-\" + dates[dates.length - 1], 7)}{\" \"}\r\n      </select>\r\n    </td>\r\n  );\r\n  console.log((week_items.__html: modal.summary));\r\n  return week_items;\r\n};\r\n\r\nconst generateHeader = (props) => {\r\n  let cur_date = props;\r\n  console.log(cur_date);\r\n  let header_days = [];\r\n  header_days.push(<th key=\"empty\"></th>);\r\n  for (var i = 0; i < cur_date.length + 1; i++) {\r\n    if (i != cur_date.length) {\r\n      header_days.push(\r\n        <th align=\"center\" className=\"toran_days\" key={cur_date[i]}>\r\n          {week_days[i] + \"\\n\" + cur_date[i]}\r\n        </th>\r\n      );\r\n    } else {\r\n      header_days.push(\r\n        <th align=\"center\" className=\"toran_days\" key=\"Yashvtaz\">\r\n          Weekly Yachvatz\r\n        </th>\r\n      );\r\n      console.log(\"added yashcvatz\");\r\n    }\r\n  }\r\n  return header_days;\r\n};\r\n\r\nclass Toranim extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      is_ok_backend: true,\r\n      is_loading: false,\r\n    };\r\n  }\r\n  generateTable = async (dates) => {\r\n    let toran_select = [];\r\n    let result_toranim_cur_week;\r\n    let res, res_js;\r\n\r\n    res = await fetch_toranim(dates);\r\n    res_js = await res.json();\r\n    console.log(res);\r\n    // Promise.all([fetch_toranim(dates)]).then((values) => {\r\n    //   console.log(values[0]);\r\n    //   toran_select.push(\r\n    //     <tr key=\"date_header\">{setForEachDay(values[0], dates)}</tr>\r\n    //   );\r\n    // });\r\n    // return toran_select;\r\n    // setForEachDay(values[0], dates)\r\n\r\n    // fetch_toranim(dates).then((res) => {\r\n    //   console.log(res);\r\n    //   console.log(toran_select);\r\n    // });\r\n    console.log(\"hhhhhhhhhhhhhhhhhhhh\");\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let response, data;\r\n    response = await fetch_toranim(this.props.date);\r\n    data = await res.json();\r\n    console.log(data);\r\n  }\r\n\r\n  render() {\r\n    var cur_date = this.props.date;\r\n    console.log(\"lol\");\r\n\r\n    return (\r\n      <div>\r\n        <MDBTable striped bordered>\r\n          <MDBTableHead color=\"primary-color\">\r\n            <tr>{generateHeader(this.props.date)}</tr>\r\n          </MDBTableHead>\r\n          <MDBTableBody>{generateTable(this.props.date)}</MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toranim;\r\n"]},"metadata":{},"sourceType":"module"}