{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ilan\\\\dev\\\\palpi\\\\toran-app\\\\DayDuty\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ilan\\\\dev\\\\palpi\\\\toran-app\\\\DayDuty\\\\src\\\\Components\\\\HookTest.jsx\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport fetch_toranim from \"./DataFetch\";\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\n\nfunction TableTroanim(props) {\n  const _useState = useState(props.date),\n        _useState2 = _slicedToArray(_useState, 2),\n        Week = _useState2[0],\n        setWeek = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        IsLoading = _useState4[0],\n        setIsLoading = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        IsOKBackend = _useState6[0],\n        setIsOKBackend = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        ToranimWeek = _useState8[0],\n        setToranimWeek = _useState8[1];\n\n  console.log(props, \"hey\");\n  useEffect(() => {\n    console.log(\"born thie way!\");\n    fetch_toranim(Week).then(toranim_in_week => {\n      setIsLoading(false);\n      setToranimWeek(toranim_in_week); //     this.setState({\n      //     week: this.props.date,\n      //     is_loading: false,\n      //     toranim_in_week: toranim_in_week,\n      //   });\n    });\n  }, [Week]);\n\n  const generateHeader = props => {\n    let cur_date = props;\n    console.log(cur_date);\n    let header_days = [];\n    header_days.push(React.createElement(\"th\", {\n      key: \"empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n\n    for (var i = 0; i < cur_date.length + 1; i++) {\n      if (i != cur_date.length) {\n        header_days.push(React.createElement(\"th\", {\n          align: \"center\",\n          className: \"toran_days\",\n          key: cur_date[i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, week_days[i] + \"\\n\" + cur_date[i]));\n      } else {\n        header_days.push(React.createElement(\"th\", {\n          align: \"center\",\n          className: \"toran_days\",\n          key: \"Yashvtaz\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Weekly Yachvatz\"));\n        console.log(\"added yashcvatz\");\n      }\n    }\n\n    return header_days;\n  };\n\n  const toranim = [\"A\", \"B\", \"C\", \"D\", \"E\"]; // const animatedComponents = makeAnimated();\n\n  const week_days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wendsday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n  const addOptions = (date, day) => {\n    let items = [];\n\n    for (var i = 0; i < toranim.length; i++) {\n      // items.push({ label: toranim[i], value: date, key: i, day: day });\n      items.push(React.createElement(\"option\", {\n        label: toranim[i],\n        value: date,\n        key: i,\n        day: day,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, toranim[i]));\n    }\n\n    return items;\n  };\n\n  const handleChange = target_toran => {\n    console.log(\"hettt\");\n    const _target_toran$target = target_toran.target,\n          name = _target_toran$target.name,\n          valueof = _target_toran$target.valueof;\n    console.log(name, valueof);\n    let index = target_toran.nativeEvent.target.selectedIndex;\n    let label = target_toran.nativeEvent.target[index].text;\n    let value = target_toran.target.value;\n    console.log(label, value);\n    var url = \"http://localhost:5000/set_toran\";\n    let toran_json_data = {\n      label: label,\n      value: value\n    };\n    fetch(url, {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(toran_json_data)\n    }).then(res => {\n      console.log(res);\n    });\n  };\n\n  const generateTable = () => {\n    let toran_select = [];\n    toran_select.push(React.createElement(\"tr\", {\n      key: \"date_header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, setForEachDay())); // res = await fetch_toranim(dates);\n    // res_js = await res.json();\n    // console.log(res);\n    // Promise.all([fetch_toranim(dates)]).then((values) => {\n    //   console.log(values[0]);\n    //   toran_select.push(\n    //     <tr key=\"date_header\">{setForEachDay(values[0], dates)}</tr>\n    //   );\n    // });\n    // return toran_select;\n    // setForEachDay(values[0], dates)\n    // fetch_toranim(dates).then((res) => {\n    //   console.log(res);\n    //   console.log(toran_select);\n    // });\n\n    console.log(\"hhhhhhhhhhhhhhhhhhhh\");\n  };\n\n  const setForEachDay = () => {\n    let week_items = [];\n    let dates = Week;\n    console.log(\"rendered again\");\n    week_items.push(React.createElement(\"th\", {\n      key: \"empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Toran\"));\n\n    for (var i = 0; i < dates.length; i++) {\n      {\n        console.log(ToranimWeek, dates[i]);\n      }\n      week_items.push(React.createElement(\"td\", {\n        key: dates[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, console.log(Object.keys(ToranimWeek).includes(dates[i]) ? ToranimWeek[dates[i]] : \"DEFAULT\"), React.createElement(\"select\", {\n        value: Object.keys(toranim_this_week).includes(dates[i]) ? toranim_this_week[dates[i]] : \"DEFAULT\",\n        onChange: handleChange,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"DEFAULT\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Select Toran...\", \" \"), addOptions(dates[i], i))));\n    }\n\n    week_items.push(React.createElement(\"td\", {\n      key: \"Yashvatz\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: handleChange,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Select Toran...\", \" \"), addOptions(\"yashvatz-\" + dates[0] + \"-\" + dates[dates.length - 1], 7), \" \")));\n    console.log(week_items.__html);\n    return week_items;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, console.log(\"fuckkkkkk\"), React.createElement(MDBTable, {\n    striped: true,\n    bordered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(MDBTableHead, {\n    color: \"primary-color\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, generateHeader(Week))), React.createElement(MDBTableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, generateTable(Week))));\n}\n\nexport default TableTroanim;","map":{"version":3,"sources":["C:/Users/ilan/dev/palpi/toran-app/DayDuty/src/Components/HookTest.jsx"],"names":["React","useState","useEffect","Component","fetch_toranim","MDBTable","MDBTableBody","MDBTableHead","TableTroanim","props","date","Week","setWeek","IsLoading","setIsLoading","IsOKBackend","setIsOKBackend","ToranimWeek","setToranimWeek","console","log","then","toranim_in_week","generateHeader","cur_date","header_days","push","i","length","week_days","toranim","addOptions","day","items","handleChange","target_toran","target","name","valueof","index","nativeEvent","selectedIndex","label","text","value","url","toran_json_data","fetch","method","headers","Accept","body","JSON","stringify","res","generateTable","toran_select","setForEachDay","week_items","dates","Object","keys","includes","toranim_this_week","__html"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAO,kCAAP;AACA,OAAOC,aAAP,MAA0B,aAA1B;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAqD,UAArD;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,oBACHR,QAAQ,CAACQ,KAAK,CAACC,IAAP,CADL;AAAA;AAAA,QACpBC,IADoB;AAAA,QACdC,OADc;;AAAA,qBAEOX,QAAQ,CAAC,IAAD,CAFf;AAAA;AAAA,QAEpBY,SAFoB;AAAA,QAETC,YAFS;;AAAA,qBAGWb,QAAQ,CAAC,IAAD,CAHnB;AAAA;AAAA,QAGpBc,WAHoB;AAAA,QAGPC,cAHO;;AAAA,qBAIWf,QAAQ,CAAC,IAAD,CAJnB;AAAA;AAAA,QAIpBgB,WAJoB;AAAA,QAIPC,cAJO;;AAK3BC,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ,EAAmB,KAAnB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAhB,IAAAA,aAAa,CAACO,IAAD,CAAb,CAAoBU,IAApB,CAA0BC,eAAD,IAAqB;AAC5CR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,MAAAA,cAAc,CAACI,eAAD,CAAd,CAF4C,CAI5C;AACA;AACA;AACA;AACA;AACD,KATD;AAUD,GAZQ,EAYN,CAACX,IAAD,CAZM,CAAT;;AAaA,QAAMY,cAAc,GAAId,KAAD,IAAW;AAChC,QAAIe,QAAQ,GAAGf,KAAf;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACA,QAAIC,WAAW,GAAG,EAAlB;AACAA,IAAAA,WAAW,CAACC,IAAZ,CAAiB;AAAI,MAAA,GAAG,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAAT,GAAkB,CAAtC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,UAAIA,CAAC,IAAIH,QAAQ,CAACI,MAAlB,EAA0B;AACxBH,QAAAA,WAAW,CAACC,IAAZ,CACE;AAAI,UAAA,KAAK,EAAC,QAAV;AAAmB,UAAA,SAAS,EAAC,YAA7B;AAA0C,UAAA,GAAG,EAAEF,QAAQ,CAACG,CAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGE,SAAS,CAACF,CAAD,CAAT,GAAe,IAAf,GAAsBH,QAAQ,CAACG,CAAD,CADjC,CADF;AAKD,OAND,MAMO;AACLF,QAAAA,WAAW,CAACC,IAAZ,CACE;AAAI,UAAA,KAAK,EAAC,QAAV;AAAmB,UAAA,SAAS,EAAC,YAA7B;AAA0C,UAAA,GAAG,EAAC,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF;AAKAP,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;AACF;;AACD,WAAOK,WAAP;AACD,GAtBD;;AAwBA,QAAMK,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAhB,CA5C2B,CA6C3B;;AACA,QAAMD,SAAS,GAAG,CAChB,QADgB,EAEhB,QAFgB,EAGhB,SAHgB,EAIhB,UAJgB,EAKhB,UALgB,EAMhB,QANgB,EAOhB,UAPgB,CAAlB;;AAUA,QAAME,UAAU,GAAG,CAACrB,IAAD,EAAOsB,GAAP,KAAe;AAChC,QAAIC,KAAK,GAAG,EAAZ;;AAEA,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,OAAO,CAACF,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC;AACAM,MAAAA,KAAK,CAACP,IAAN,CACE;AAAQ,QAAA,KAAK,EAAEI,OAAO,CAACH,CAAD,CAAtB;AAA2B,QAAA,KAAK,EAAEjB,IAAlC;AAAwC,QAAA,GAAG,EAAEiB,CAA7C;AAAgD,QAAA,GAAG,EAAEK,GAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,OAAO,CAACH,CAAD,CADV,CADF;AAKD;;AAED,WAAOM,KAAP;AACD,GAbD;;AAeA,QAAMC,YAAY,GAAIC,YAAD,IAAkB;AACrChB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AADqC,iCAEXe,YAAY,CAACC,MAFF;AAAA,UAE7BC,IAF6B,wBAE7BA,IAF6B;AAAA,UAEvBC,OAFuB,wBAEvBA,OAFuB;AAGrCnB,IAAAA,OAAO,CAACC,GAAR,CAAYiB,IAAZ,EAAkBC,OAAlB;AACA,QAAIC,KAAK,GAAGJ,YAAY,CAACK,WAAb,CAAyBJ,MAAzB,CAAgCK,aAA5C;AACA,QAAIC,KAAK,GAAGP,YAAY,CAACK,WAAb,CAAyBJ,MAAzB,CAAgCG,KAAhC,EAAuCI,IAAnD;AACA,QAAIC,KAAK,GAAGT,YAAY,CAACC,MAAb,CAAoBQ,KAAhC;AACAzB,IAAAA,OAAO,CAACC,GAAR,CAAYsB,KAAZ,EAAmBE,KAAnB;AACA,QAAIC,GAAG,GAAG,iCAAV;AACA,QAAIC,eAAe,GAAG;AAAEJ,MAAAA,KAAK,EAAEA,KAAT;AAAgBE,MAAAA,KAAK,EAAEA;AAAvB,KAAtB;AACAG,IAAAA,KAAK,CAACF,GAAD,EAAM;AACTG,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFA;AAOTC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,eAAf;AAPG,KAAN,CAAL,CAQGzB,IARH,CAQSiC,GAAD,IAAS;AACfnC,MAAAA,OAAO,CAACC,GAAR,CAAYkC,GAAZ;AACD,KAVD;AAWD,GArBD;;AAuBA,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAIC,YAAY,GAAG,EAAnB;AACAA,IAAAA,YAAY,CAAC9B,IAAb,CAAkB;AAAI,MAAA,GAAG,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB+B,aAAa,EAApC,CAAlB,EAF0B,CAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACAtC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,GApBD;;AAsBA,QAAMqC,aAAa,GAAG,MAAM;AAC1B,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIC,KAAK,GAAGhD,IAAZ;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAsC,IAAAA,UAAU,CAAChC,IAAX,CAAgB;AAAI,MAAA,GAAG,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgC,KAAK,CAAC/B,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC;AACER,QAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAyB0C,KAAK,CAAChC,CAAD,CAA9B;AACD;AACD+B,MAAAA,UAAU,CAAChC,IAAX,CACE;AAAI,QAAA,GAAG,EAAEiC,KAAK,CAAChC,CAAD,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,OAAO,CAACC,GAAR,CACCwC,MAAM,CAACC,IAAP,CAAY5C,WAAZ,EAAyB6C,QAAzB,CAAkCH,KAAK,CAAChC,CAAD,CAAvC,IACIV,WAAW,CAAC0C,KAAK,CAAChC,CAAD,CAAN,CADf,GAEI,SAHL,CADH,EAME;AACE,QAAA,KAAK,EACHiC,MAAM,CAACC,IAAP,CAAYE,iBAAZ,EAA+BD,QAA/B,CAAwCH,KAAK,CAAChC,CAAD,CAA7C,IACIoC,iBAAiB,CAACJ,KAAK,CAAChC,CAAD,CAAN,CADrB,GAEI,SAJR;AAME,QAAA,QAAQ,EAAEO,YANZ;AAOE,QAAA,SAAS,EAAC,cAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,QAAQ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACkB,GADlB,CATF,EAYGH,UAAU,CAAC4B,KAAK,CAAChC,CAAD,CAAN,EAAWA,CAAX,CAZb,CANF,CADF;AAuBD;;AACD+B,IAAAA,UAAU,CAAChC,IAAX,CACE;AAAI,MAAA,GAAG,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,QAAQ,EAAEQ,YAAlB;AAAgC,MAAA,SAAS,EAAC,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,QAAQ,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkB,GADlB,CADF,EAIGH,UAAU,CACT,cAAc4B,KAAK,CAAC,CAAD,CAAnB,GAAyB,GAAzB,GAA+BA,KAAK,CAACA,KAAK,CAAC/B,MAAN,GAAe,CAAhB,CAD3B,EAET,CAFS,CAJb,EAOK,GAPL,CADF,CADF;AAaAT,IAAAA,OAAO,CAACC,GAAR,CAAasC,UAAU,CAACM,MAAxB;AACA,WAAON,UAAP;AACD,GAhDD;;AAkDA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvC,OAAO,CAACC,GAAR,CAAY,WAAZ,CADH,EAEE,oBAAC,QAAD;AAAU,IAAA,OAAO,MAAjB;AAAkB,IAAA,QAAQ,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,cAAc,CAACZ,IAAD,CAAnB,CADF,CADF,EAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAe4C,aAAa,CAAC5C,IAAD,CAA5B,CAJF,CAFF,CADF;AAWD;;AAED,eAAeH,YAAf","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport fetch_toranim from \"./DataFetch\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\n\r\nfunction TableTroanim(props) {\r\n  const [Week, setWeek] = useState(props.date);\r\n  const [IsLoading, setIsLoading] = useState(true);\r\n  const [IsOKBackend, setIsOKBackend] = useState(true);\r\n  const [ToranimWeek, setToranimWeek] = useState(null);\r\n  console.log(props, \"hey\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"born thie way!\");\r\n    fetch_toranim(Week).then((toranim_in_week) => {\r\n      setIsLoading(false);\r\n      setToranimWeek(toranim_in_week);\r\n\r\n      //     this.setState({\r\n      //     week: this.props.date,\r\n      //     is_loading: false,\r\n      //     toranim_in_week: toranim_in_week,\r\n      //   });\r\n    });\r\n  }, [Week]);\r\n  const generateHeader = (props) => {\r\n    let cur_date = props;\r\n    console.log(cur_date);\r\n    let header_days = [];\r\n    header_days.push(<th key=\"empty\"></th>);\r\n    for (var i = 0; i < cur_date.length + 1; i++) {\r\n      if (i != cur_date.length) {\r\n        header_days.push(\r\n          <th align=\"center\" className=\"toran_days\" key={cur_date[i]}>\r\n            {week_days[i] + \"\\n\" + cur_date[i]}\r\n          </th>\r\n        );\r\n      } else {\r\n        header_days.push(\r\n          <th align=\"center\" className=\"toran_days\" key=\"Yashvtaz\">\r\n            Weekly Yachvatz\r\n          </th>\r\n        );\r\n        console.log(\"added yashcvatz\");\r\n      }\r\n    }\r\n    return header_days;\r\n  };\r\n\r\n  const toranim = [\"A\", \"B\", \"C\", \"D\", \"E\"];\r\n  // const animatedComponents = makeAnimated();\r\n  const week_days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wendsday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  const addOptions = (date, day) => {\r\n    let items = [];\r\n\r\n    for (var i = 0; i < toranim.length; i++) {\r\n      // items.push({ label: toranim[i], value: date, key: i, day: day });\r\n      items.push(\r\n        <option label={toranim[i]} value={date} key={i} day={day}>\r\n          {toranim[i]}\r\n        </option>\r\n      );\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  const handleChange = (target_toran) => {\r\n    console.log(\"hettt\");\r\n    const { name, valueof } = target_toran.target;\r\n    console.log(name, valueof);\r\n    let index = target_toran.nativeEvent.target.selectedIndex;\r\n    let label = target_toran.nativeEvent.target[index].text;\r\n    let value = target_toran.target.value;\r\n    console.log(label, value);\r\n    var url = \"http://localhost:5000/set_toran\";\r\n    let toran_json_data = { label: label, value: value };\r\n    fetch(url, {\r\n      method: \"post\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n\r\n      body: JSON.stringify(toran_json_data),\r\n    }).then((res) => {\r\n      console.log(res);\r\n    });\r\n  };\r\n\r\n  const generateTable = () => {\r\n    let toran_select = [];\r\n    toran_select.push(<tr key=\"date_header\">{setForEachDay()}</tr>);\r\n    // res = await fetch_toranim(dates);\r\n    // res_js = await res.json();\r\n    // console.log(res);\r\n    // Promise.all([fetch_toranim(dates)]).then((values) => {\r\n    //   console.log(values[0]);\r\n    //   toran_select.push(\r\n    //     <tr key=\"date_header\">{setForEachDay(values[0], dates)}</tr>\r\n    //   );\r\n    // });\r\n    // return toran_select;\r\n    // setForEachDay(values[0], dates)\r\n\r\n    // fetch_toranim(dates).then((res) => {\r\n    //   console.log(res);\r\n    //   console.log(toran_select);\r\n    // });\r\n    console.log(\"hhhhhhhhhhhhhhhhhhhh\");\r\n  };\r\n\r\n  const setForEachDay = () => {\r\n    let week_items = [];\r\n    let dates = Week;\r\n    console.log(\"rendered again\");\r\n    week_items.push(<th key=\"empty\">Toran</th>);\r\n    for (var i = 0; i < dates.length; i++) {\r\n      {\r\n        console.log(ToranimWeek, dates[i]);\r\n      }\r\n      week_items.push(\r\n        <td key={dates[i]}>\r\n          {console.log(\r\n            Object.keys(ToranimWeek).includes(dates[i])\r\n              ? ToranimWeek[dates[i]]\r\n              : \"DEFAULT\"\r\n          )}\r\n          <select\r\n            value={\r\n              Object.keys(toranim_this_week).includes(dates[i])\r\n                ? toranim_this_week[dates[i]]\r\n                : \"DEFAULT\"\r\n            }\r\n            onChange={handleChange}\r\n            className=\"form-control\"\r\n          >\r\n            <option value=\"DEFAULT\" disabled>\r\n              Select Toran...{\" \"}\r\n            </option>\r\n            {addOptions(dates[i], i)}\r\n          </select>\r\n        </td>\r\n      );\r\n    }\r\n    week_items.push(\r\n      <td key=\"Yashvatz\">\r\n        <select onChange={handleChange} className=\"form-control\">\r\n          <option selected disabled>\r\n            Select Toran...{\" \"}\r\n          </option>\r\n          {addOptions(\r\n            \"yashvatz-\" + dates[0] + \"-\" + dates[dates.length - 1],\r\n            7\r\n          )}{\" \"}\r\n        </select>\r\n      </td>\r\n    );\r\n    console.log((week_items.__html: modal.summary));\r\n    return week_items;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {console.log(\"fuckkkkkk\")}\r\n      <MDBTable striped bordered>\r\n        <MDBTableHead color=\"primary-color\">\r\n          <tr>{generateHeader(Week)}</tr>\r\n        </MDBTableHead>\r\n        <MDBTableBody>{generateTable(Week)}</MDBTableBody>\r\n      </MDBTable>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableTroanim;\r\n"]},"metadata":{},"sourceType":"module"}