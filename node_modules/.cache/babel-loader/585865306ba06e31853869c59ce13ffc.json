{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withDeprecationWarning = exports.getTimeStamp = exports.padZeroes = void 0;\n\nvar constants = _interopRequireWildcard(require(\"./constants\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar padZeroes = function padZeroes(width, n) {\n  return ('' + n).padStart(width, '0');\n};\n\nexports.padZeroes = padZeroes;\n\nvar getTimeStamp = function getTimeStamp() {\n  var now = new Date();\n  return \"[\".concat(padZeroes(2, now.getHours()), \":\").concat(padZeroes(2, now.getMinutes()), \":\") + \"\".concat(padZeroes(2, now.getSeconds()), \".\").concat(padZeroes(3, now.getMilliseconds()), \"]\");\n};\n\nexports.getTimeStamp = getTimeStamp;\nvar shownWarningLabels = [];\n\nvar withDeprecationWarning = function withDeprecationWarning(warningLabel, fn) {\n  return function () {\n    if (!shownWarningLabels.includes(warningLabel)) {\n      var message;\n\n      switch (warningLabel) {\n        case constants.DEPRECATED_THIS_LIFECYCLE_PANEL:\n          message = 'this.LifecyclePanel is deprecated, please use this.props.LifecyclePanel instead.';\n          break;\n\n        case constants.DEPRECATED_THIS_TRACE:\n          message = 'this.trace is deprecated, please use this.props.trace instead.';\n          break;\n\n        case constants.DEPRECATED_CLEAR_COUNTERS:\n          message = 'clearInstanceIdCounters() is deprecated, please use resetInstanceIdCounters() instead.';\n          break;\n\n        default:\n          message = 'Unspecified warning.';\n      } // eslint-disable-next-line no-console\n\n\n      console.warn(\"WARNING: react-lifecycle-visualizer: \".concat(message));\n      shownWarningLabels.push(warningLabel);\n    }\n\n    return fn.apply(void 0, arguments);\n  };\n};\n\nexports.withDeprecationWarning = withDeprecationWarning;","map":null,"metadata":{},"sourceType":"script"}