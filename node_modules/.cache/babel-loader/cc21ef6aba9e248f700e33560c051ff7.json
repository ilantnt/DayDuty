{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilan\\\\dev\\\\palpi\\\\toran-app\\\\DayDuty\\\\src\\\\Components\\\\Toranim.jsx\";\nimport React, { Component } from \"react\";\nimport Select, { components } from \"react-select\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Table from \"react-bootstrap/Button\";\nimport \"../CSS/Toranim.css\";\nimport DataFetch from \"./DataFetch\";\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\"; // const toranim = [\"A\", \"B\", \"C\", \"D\", \"E\"];\n// // const animatedComponents = makeAnimated();\n// const { Option } = Select;\n// const addOptions = (date, day) => {\n//   let items = [];\n//   for (var i = 0; i < toranim.length; i++) {\n//     // items.push({ label: toranim[i], value: date, key: i, day: day });\n//     items.push(\n//       <option label={toranim[i]} value={date} key={i} day={day}>\n//         {toranim[i]}\n//       </option>\n//     );\n//   }\n//   return items;\n// };\n\nconst toranim = [\"A\", \"B\", \"C\", \"D\", \"E\"]; // const animatedComponents = makeAnimated();\n\nconst week_days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wendsday\", \"Thursday\", \"Friday\", \"Saturday\"];\nconst Option = Select.Option;\n\nconst addOptions = (date, day) => {\n  let items = [];\n\n  for (var i = 0; i < toranim.length; i++) {\n    // items.push({ label: toranim[i], value: date, key: i, day: day });\n    items.push(React.createElement(\"option\", {\n      label: toranim[i],\n      value: date,\n      key: i,\n      day: day,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, toranim[i]));\n  }\n\n  return items;\n};\n\nconst handleChange = target_toran => {\n  console.log(\"hettt\");\n  let index = target_toran.nativeEvent.target.selectedIndex;\n  let label = target_toran.nativeEvent.target[index].text;\n  let value = target_toran.target.value;\n  console.log(label, value);\n  var url = \"http://localhost:5000/set_toran\";\n  let toran_json_data = {\n    label: label,\n    value: value\n  };\n  fetch(url, {\n    method: \"post\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(toran_json_data)\n  }).then(res => {\n    console.log(res);\n  });\n};\n\nexport const generateTable = () => {\n  let res = [];\n  let result_toranim_cur_week; // result_toranim_cur_week = await table_data_toranim(dates);\n\n  console.log(\"hhhhhhhhhhhhhhhhhhhh\");\n  console.log(result_toranim_cur_week);\n  res.push(React.createElement(\"tr\", {\n    key: \"date_header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, setForEachDay(result_toranim_cur_week)));\n  console.log(res);\n  return res;\n};\n\nconst setForEachDay = toranim_this_week => {\n  let week_items = [];\n  let dates = this.props.date;\n  console.log(\"rendered again\");\n  week_items.push(React.createElement(\"th\", {\n    key: \"empty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Toran\"));\n\n  for (var i = 0; i < dates.length; i++) {\n    week_items.push(React.createElement(\"td\", {\n      key: dates[i],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      value: Object.keys(toranim_this_week).includes(dates[i]) ? toranim_this_week[dates[i]] : \"DEFAULT\",\n      onChange: this.handleChange,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"DEFAULT\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Select Toran...\", \" \"), addOptions(dates[i], i))));\n  }\n\n  week_items.push(React.createElement(\"td\", {\n    key: \"Yashvatz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    onChange: this.handleChange,\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Select Toran...\", \" \"), addOptions(\"yashvatz-\" + dates[0] + \"-\" + dates[dates.length - 1], 7), \" \")));\n  console.log(week_items[0]);\n  return week_items;\n};\n\nconst fetch_toranim = () => {\n  let dates = \"Ð’\"; // let dates = this.state.dates;\n\n  var url = new URL(\"http://localhost:5000/get_toranim\");\n  var params = {\n    dates: dates\n  };\n  url.search = new URLSearchParams(params).toString();\n  console.log(url);\n  fetch(url).then(res => res.json()).then(toran_days => this.setState({\n    toran_days\n  })); // this.setState({ toranim_schedule }));\n\n  console.log(\"rrrrrrr\");\n};\n\nconst generateHeader = props => {\n  let cur_date = props;\n  console.log(cur_date);\n  let header_days = [];\n  header_days.push(React.createElement(\"th\", {\n    key: \"empty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }));\n\n  for (var i = 0; i < cur_date.length + 1; i++) {\n    if (i != cur_date.length) {\n      header_days.push(React.createElement(\"th\", {\n        align: \"center\",\n        className: \"toran_days\",\n        key: cur_date[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, week_days[i] + \"\\n\" + cur_date[i]));\n    } else {\n      header_days.push(React.createElement(\"th\", {\n        align: \"center\",\n        className: \"toran_days\",\n        key: \"Yashvtaz\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Weekly Yachvatz\"));\n    }\n  }\n\n  return header_days;\n};\n\nclass Toranim extends Component {\n  //   // state = {\n  //   //   dates: props.date,\n  //   //   toran_days: null,\n  //   //   is_fetching: true,\n  //   // };\n  //   handleChange = (target_toran) => {\n  //     console.log(\"hettt\");\n  //     let index = target_toran.nativeEvent.target.selectedIndex;\n  //     let label = target_toran.nativeEvent.target[index].text;\n  //     let value = target_toran.target.value;\n  //     console.log(label, value);\n  //     var url = \"http://localhost:5000/set_toran\";\n  //     let toran_json_data = { label: label, value: value };\n  //     fetch(url, {\n  //       method: \"post\",\n  //       headers: {\n  //         Accept: \"application/json\",\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify(toran_json_data),\n  //     }).then((res) => {\n  //       console.log(res);\n  //     });\n  //   };\n  //   generateTable() {\n  //     let res = [];\n  //     let dates = this.props.date;\n  //     let result_toranim_cur_week;\n  //     // result_toranim_cur_week = await table_data_toranim(dates);\n  //     console.log(\"hhhhhhhhhhhhhhhhhhhh\");\n  //     console.log(result_toranim_cur_week);\n  //     res.push(\n  //       <tr key=\"date_header\">{this.setForEachDay(result_toranim_cur_week)}</tr>\n  //     );\n  //     console.log(res);\n  //     return res;\n  //   }\n  //   getVlaueFromKey = (object, value_by_key) => {\n  //     console.log(\"passed here\");\n  //     var a = JSON.parse(JSON.stringify(object));\n  //     console.log(a.value_by_key);\n  //     return object.value_by_key;\n  //   };\n  //   setForEachDay = (toranim_this_week) => {\n  //     let week_items = [];\n  //     let dates = this.props.date;\n  //     console.log(\"rendered again\");\n  //     week_items.push(<th key=\"empty\">Toran</th>);\n  //     for (var i = 0; i < dates.length; i++) {\n  //       week_items.push(\n  //         <td key={dates[i]}>\n  //           <select\n  //             value={\n  //               // Object.keys(toranim_this_week).includes(dates[i])\n  //               //   ? toranim_this_week[dates[i]]\n  //               //   : \"DEFAULT\"\n  //               \"ffff\"\n  //             }\n  //             onChange={this.handleChange}\n  //             className=\"form-control\"\n  //           >\n  //             <option value=\"DEFAULT\" disabled>\n  //               Select Toran...{\" \"}\n  //             </option>\n  //             {addOptions(dates[i], i)}\n  //           </select>\n  //         </td>\n  //       );\n  //     }\n  //     week_items.push(\n  //       <td key=\"Yashvatz\">\n  //         <select onChange={this.handleChange} className=\"form-control\">\n  //           <option selected disabled>\n  //             Select Toran...{\" \"}\n  //           </option>\n  //           {addOptions(\n  //             \"yashvatz-\" + dates[0] + \"-\" + dates[dates.length - 1],\n  //             7\n  //           )}{\" \"}\n  //         </select>\n  //       </td>\n  //     );\n  //     console.log(week_items[0]);\n  //     return week_items;\n  //   };\n  //   generateHeader = (cur_date) => {\n  //     let header_days = [];\n  //     header_days.push(<th key=\"empty\"></th>);\n  //     for (var i = 0; i < cur_date.length + 1; i++) {\n  //       if (i != cur_date.length) {\n  //         header_days.push(\n  //           <th align=\"center\" className=\"toran_days\" key={cur_date[i]}>\n  //             {week_days[i] + \"\\n\" + cur_date[i]}\n  //           </th>\n  //         );\n  //       } else {\n  //         header_days.push(\n  //           <th align=\"center\" className=\"toran_days\" key=\"Yashvtaz\">\n  //             Weekly Yachvatz\n  //           </th>\n  //         );\n  //       }\n  //     }\n  //     return header_days;\n  //   };\n  //   componentDidMount() {\n  //     let dates = \"Ð’\";\n  //     // let dates = this.state.dates;\n  //     var url = new URL(\"http://localhost:5000/get_toranim\");\n  //     var params = { dates: dates };\n  //     url.search = new URLSearchParams(params).toString();\n  //     console.log(url);\n  //     fetch(url)\n  //       .then((res) => res.json())\n  //       .then((toran_days) => this.setState({ toran_days }));\n  //     // this.setState({ toranim_schedule }));\n  //     console.log(\"rrrrrrr\");\n  //   }\n  render() {\n    var cur_date = this.props.date;\n    console.log(\"lol\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, console.log(cur_date), React.createElement(MDBTable, {\n      striped: true,\n      bordered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(MDBTableHead, {\n      color: \"primary-color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, generateHeader(this.props.date))), React.createElement(MDBTableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, generateTable())));\n  }\n\n}\n\nexport default Toranim;","map":{"version":3,"sources":["C:/Users/ilan/dev/palpi/toran-app/DayDuty/src/Components/Toranim.jsx"],"names":["React","Component","Select","components","Table","DataFetch","MDBTable","MDBTableBody","MDBTableHead","toranim","week_days","Option","addOptions","date","day","items","i","length","push","handleChange","target_toran","console","log","index","nativeEvent","target","selectedIndex","label","text","value","url","toran_json_data","fetch","method","headers","Accept","body","JSON","stringify","then","res","generateTable","result_toranim_cur_week","setForEachDay","toranim_this_week","week_items","dates","props","Object","keys","includes","fetch_toranim","URL","params","search","URLSearchParams","toString","json","toran_days","setState","generateHeader","cur_date","header_days","Toranim","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,cAAnC;AACA,OAAO,kCAAP;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAqD,UAArD,C,CAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAhB,C,CACA;;AACA,MAAMC,SAAS,GAAG,CAChB,QADgB,EAEhB,QAFgB,EAGhB,SAHgB,EAIhB,UAJgB,EAKhB,UALgB,EAMhB,QANgB,EAOhB,UAPgB,CAAlB;MASQC,M,GAAWT,M,CAAXS,M;;AAER,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe;AAChC,MAAIC,KAAK,GAAG,EAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,OAAO,CAACQ,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC;AACAD,IAAAA,KAAK,CAACG,IAAN,CACE;AAAQ,MAAA,KAAK,EAAET,OAAO,CAACO,CAAD,CAAtB;AAA2B,MAAA,KAAK,EAAEH,IAAlC;AAAwC,MAAA,GAAG,EAAEG,CAA7C;AAAgD,MAAA,GAAG,EAAEF,GAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,OAAO,CAACO,CAAD,CADV,CADF;AAKD;;AAED,SAAOD,KAAP;AACD,CAbD;;AAeA,MAAMI,YAAY,GAAIC,YAAD,IAAkB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,MAAIC,KAAK,GAAGH,YAAY,CAACI,WAAb,CAAyBC,MAAzB,CAAgCC,aAA5C;AACA,MAAIC,KAAK,GAAGP,YAAY,CAACI,WAAb,CAAyBC,MAAzB,CAAgCF,KAAhC,EAAuCK,IAAnD;AACA,MAAIC,KAAK,GAAGT,YAAY,CAACK,MAAb,CAAoBI,KAAhC;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ,EAAmBE,KAAnB;AACA,MAAIC,GAAG,GAAG,iCAAV;AACA,MAAIC,eAAe,GAAG;AAAEJ,IAAAA,KAAK,EAAEA,KAAT;AAAgBE,IAAAA,KAAK,EAAEA;AAAvB,GAAtB;AACAG,EAAAA,KAAK,CAACF,GAAD,EAAM;AACTG,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFA;AAOTC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,eAAf;AAPG,GAAN,CAAL,CAQGQ,IARH,CAQSC,GAAD,IAAS;AACfnB,IAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACD,GAVD;AAWD,CAnBD;;AAqBA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,MAAID,GAAG,GAAG,EAAV;AACA,MAAIE,uBAAJ,CAFiC,CAGjC;;AACArB,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYoB,uBAAZ;AACAF,EAAAA,GAAG,CAACtB,IAAJ,CAAS;AAAI,IAAA,GAAG,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuByB,aAAa,CAACD,uBAAD,CAApC,CAAT;AACArB,EAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACA,SAAOA,GAAP;AACD,CATM;;AAWP,MAAMG,aAAa,GAAIC,iBAAD,IAAuB;AAC3C,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWlC,IAAvB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAuB,EAAAA,UAAU,CAAC3B,IAAX,CAAgB;AAAI,IAAA,GAAG,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhB;;AACA,OAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8B,KAAK,CAAC7B,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC6B,IAAAA,UAAU,CAAC3B,IAAX,CACE;AAAI,MAAA,GAAG,EAAE4B,KAAK,CAAC9B,CAAD,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EACHgC,MAAM,CAACC,IAAP,CAAYL,iBAAZ,EAA+BM,QAA/B,CAAwCJ,KAAK,CAAC9B,CAAD,CAA7C,IACI4B,iBAAiB,CAACE,KAAK,CAAC9B,CAAD,CAAN,CADrB,GAEI,SAJR;AAME,MAAA,QAAQ,EAAE,KAAKG,YANjB;AAOE,MAAA,SAAS,EAAC,cAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,QAAQ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkB,GADlB,CATF,EAYGP,UAAU,CAACkC,KAAK,CAAC9B,CAAD,CAAN,EAAWA,CAAX,CAZb,CADF,CADF;AAkBD;;AACD6B,EAAAA,UAAU,CAAC3B,IAAX,CACE;AAAI,IAAA,GAAG,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,QAAQ,EAAE,KAAKC,YAAvB;AAAqC,IAAA,SAAS,EAAC,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,QAAQ,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACkB,GADlB,CADF,EAIGP,UAAU,CAAC,cAAckC,KAAK,CAAC,CAAD,CAAnB,GAAyB,GAAzB,GAA+BA,KAAK,CAACA,KAAK,CAAC7B,MAAN,GAAe,CAAhB,CAArC,EAAyD,CAAzD,CAJb,EAI0E,GAJ1E,CADF,CADF;AAUAI,EAAAA,OAAO,CAACC,GAAR,CAAYuB,UAAU,CAAC,CAAD,CAAtB;AACA,SAAOA,UAAP;AACD,CArCD;;AAuCA,MAAMM,aAAa,GAAG,MAAM;AAC1B,MAAIL,KAAK,GAAG,GAAZ,CAD0B,CAE1B;;AACA,MAAIhB,GAAG,GAAG,IAAIsB,GAAJ,CAAQ,mCAAR,CAAV;AACA,MAAIC,MAAM,GAAG;AAAEP,IAAAA,KAAK,EAAEA;AAAT,GAAb;AAEAhB,EAAAA,GAAG,CAACwB,MAAJ,GAAa,IAAIC,eAAJ,CAAoBF,MAApB,EAA4BG,QAA5B,EAAb;AACAnC,EAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACAE,EAAAA,KAAK,CAACF,GAAD,CAAL,CACGS,IADH,CACSC,GAAD,IAASA,GAAG,CAACiB,IAAJ,EADjB,EAEGlB,IAFH,CAESmB,UAAD,IAAgB,KAAKC,QAAL,CAAc;AAAED,IAAAA;AAAF,GAAd,CAFxB,EAR0B,CAW1B;;AACArC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,CAbD;;AAeA,MAAMsC,cAAc,GAAIb,KAAD,IAAW;AAChC,MAAIc,QAAQ,GAAGd,KAAf;AACA1B,EAAAA,OAAO,CAACC,GAAR,CAAYuC,QAAZ;AACA,MAAIC,WAAW,GAAG,EAAlB;AACAA,EAAAA,WAAW,CAAC5C,IAAZ,CAAiB;AAAI,IAAA,GAAG,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB;;AACA,OAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6C,QAAQ,CAAC5C,MAAT,GAAkB,CAAtC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,QAAIA,CAAC,IAAI6C,QAAQ,CAAC5C,MAAlB,EAA0B;AACxB6C,MAAAA,WAAW,CAAC5C,IAAZ,CACE;AAAI,QAAA,KAAK,EAAC,QAAV;AAAmB,QAAA,SAAS,EAAC,YAA7B;AAA0C,QAAA,GAAG,EAAE2C,QAAQ,CAAC7C,CAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,SAAS,CAACM,CAAD,CAAT,GAAe,IAAf,GAAsB6C,QAAQ,CAAC7C,CAAD,CADjC,CADF;AAKD,KAND,MAMO;AACL8C,MAAAA,WAAW,CAAC5C,IAAZ,CACE;AAAI,QAAA,KAAK,EAAC,QAAV;AAAmB,QAAA,SAAS,EAAC,YAA7B;AAA0C,QAAA,GAAG,EAAC,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF;AAKD;AACF;;AACD,SAAO4C,WAAP;AACD,CArBD;;AAuBA,MAAMC,OAAN,SAAsB9D,SAAtB,CAAgd,KAAL,CAAWlC,IAA1B;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,OAAO,CAACC,GAAR,CAAYuC,QAAZ,CADH,EAEE,oBAAC,QAAD;AAAU,MAAA,OAAO,MAAjB;AAAkB,MAAA,QAAQ,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,cAAc,CAAC,KAAKb,KAAL,CAAWlC,IAAZ,CAAnB,CADF,CADF,EAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAe4B,aAAa,EAA5B,CAJF,CAFF,CADF;AAWD;;AA/I6B;;AAkJhC,eAAesB,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Select, { components } from \"react-select\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Table from \"react-bootstrap/Button\";\r\nimport \"../CSS/Toranim.css\";\r\nimport DataFetch from \"./DataFetch\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\n\r\n// const toranim = [\"A\", \"B\", \"C\", \"D\", \"E\"];\r\n// // const animatedComponents = makeAnimated();\r\n\r\n// const { Option } = Select;\r\n\r\n// const addOptions = (date, day) => {\r\n//   let items = [];\r\n\r\n//   for (var i = 0; i < toranim.length; i++) {\r\n//     // items.push({ label: toranim[i], value: date, key: i, day: day });\r\n//     items.push(\r\n//       <option label={toranim[i]} value={date} key={i} day={day}>\r\n//         {toranim[i]}\r\n//       </option>\r\n//     );\r\n//   }\r\n\r\n//   return items;\r\n// };\r\n\r\nconst toranim = [\"A\", \"B\", \"C\", \"D\", \"E\"];\r\n// const animatedComponents = makeAnimated();\r\nconst week_days = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wendsday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\nconst { Option } = Select;\r\n\r\nconst addOptions = (date, day) => {\r\n  let items = [];\r\n\r\n  for (var i = 0; i < toranim.length; i++) {\r\n    // items.push({ label: toranim[i], value: date, key: i, day: day });\r\n    items.push(\r\n      <option label={toranim[i]} value={date} key={i} day={day}>\r\n        {toranim[i]}\r\n      </option>\r\n    );\r\n  }\r\n\r\n  return items;\r\n};\r\n\r\nconst handleChange = (target_toran) => {\r\n  console.log(\"hettt\");\r\n  let index = target_toran.nativeEvent.target.selectedIndex;\r\n  let label = target_toran.nativeEvent.target[index].text;\r\n  let value = target_toran.target.value;\r\n  console.log(label, value);\r\n  var url = \"http://localhost:5000/set_toran\";\r\n  let toran_json_data = { label: label, value: value };\r\n  fetch(url, {\r\n    method: \"post\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n\r\n    body: JSON.stringify(toran_json_data),\r\n  }).then((res) => {\r\n    console.log(res);\r\n  });\r\n};\r\n\r\nexport const generateTable = () => {\r\n  let res = [];\r\n  let result_toranim_cur_week;\r\n  // result_toranim_cur_week = await table_data_toranim(dates);\r\n  console.log(\"hhhhhhhhhhhhhhhhhhhh\");\r\n  console.log(result_toranim_cur_week);\r\n  res.push(<tr key=\"date_header\">{setForEachDay(result_toranim_cur_week)}</tr>);\r\n  console.log(res);\r\n  return res;\r\n};\r\n\r\nconst setForEachDay = (toranim_this_week) => {\r\n  let week_items = [];\r\n  let dates = this.props.date;\r\n  console.log(\"rendered again\");\r\n  week_items.push(<th key=\"empty\">Toran</th>);\r\n  for (var i = 0; i < dates.length; i++) {\r\n    week_items.push(\r\n      <td key={dates[i]}>\r\n        <select\r\n          value={\r\n            Object.keys(toranim_this_week).includes(dates[i])\r\n              ? toranim_this_week[dates[i]]\r\n              : \"DEFAULT\"\r\n          }\r\n          onChange={this.handleChange}\r\n          className=\"form-control\"\r\n        >\r\n          <option value=\"DEFAULT\" disabled>\r\n            Select Toran...{\" \"}\r\n          </option>\r\n          {addOptions(dates[i], i)}\r\n        </select>\r\n      </td>\r\n    );\r\n  }\r\n  week_items.push(\r\n    <td key=\"Yashvatz\">\r\n      <select onChange={this.handleChange} className=\"form-control\">\r\n        <option selected disabled>\r\n          Select Toran...{\" \"}\r\n        </option>\r\n        {addOptions(\"yashvatz-\" + dates[0] + \"-\" + dates[dates.length - 1], 7)}{\" \"}\r\n      </select>\r\n    </td>\r\n  );\r\n  console.log(week_items[0]);\r\n  return week_items;\r\n};\r\n\r\nconst fetch_toranim = () => {\r\n  let dates = \"Ð’\";\r\n  // let dates = this.state.dates;\r\n  var url = new URL(\"http://localhost:5000/get_toranim\");\r\n  var params = { dates: dates };\r\n\r\n  url.search = new URLSearchParams(params).toString();\r\n  console.log(url);\r\n  fetch(url)\r\n    .then((res) => res.json())\r\n    .then((toran_days) => this.setState({ toran_days }));\r\n  // this.setState({ toranim_schedule }));\r\n  console.log(\"rrrrrrr\");\r\n};\r\n\r\nconst generateHeader = (props) => {\r\n  let cur_date = props;\r\n  console.log(cur_date);\r\n  let header_days = [];\r\n  header_days.push(<th key=\"empty\"></th>);\r\n  for (var i = 0; i < cur_date.length + 1; i++) {\r\n    if (i != cur_date.length) {\r\n      header_days.push(\r\n        <th align=\"center\" className=\"toran_days\" key={cur_date[i]}>\r\n          {week_days[i] + \"\\n\" + cur_date[i]}\r\n        </th>\r\n      );\r\n    } else {\r\n      header_days.push(\r\n        <th align=\"center\" className=\"toran_days\" key=\"Yashvtaz\">\r\n          Weekly Yachvatz\r\n        </th>\r\n      );\r\n    }\r\n  }\r\n  return header_days;\r\n};\r\n\r\nclass Toranim extends Component {\r\n  //   // state = {\r\n  //   //   dates: props.date,\r\n  //   //   toran_days: null,\r\n  //   //   is_fetching: true,\r\n  //   // };\r\n\r\n  //   handleChange = (target_toran) => {\r\n  //     console.log(\"hettt\");\r\n  //     let index = target_toran.nativeEvent.target.selectedIndex;\r\n  //     let label = target_toran.nativeEvent.target[index].text;\r\n  //     let value = target_toran.target.value;\r\n  //     console.log(label, value);\r\n  //     var url = \"http://localhost:5000/set_toran\";\r\n  //     let toran_json_data = { label: label, value: value };\r\n  //     fetch(url, {\r\n  //       method: \"post\",\r\n  //       headers: {\r\n  //         Accept: \"application/json\",\r\n  //         \"Content-Type\": \"application/json\",\r\n  //       },\r\n\r\n  //       body: JSON.stringify(toran_json_data),\r\n  //     }).then((res) => {\r\n  //       console.log(res);\r\n  //     });\r\n  //   };\r\n\r\n  //   generateTable() {\r\n  //     let res = [];\r\n  //     let dates = this.props.date;\r\n  //     let result_toranim_cur_week;\r\n  //     // result_toranim_cur_week = await table_data_toranim(dates);\r\n  //     console.log(\"hhhhhhhhhhhhhhhhhhhh\");\r\n  //     console.log(result_toranim_cur_week);\r\n  //     res.push(\r\n  //       <tr key=\"date_header\">{this.setForEachDay(result_toranim_cur_week)}</tr>\r\n  //     );\r\n  //     console.log(res);\r\n  //     return res;\r\n  //   }\r\n\r\n  //   getVlaueFromKey = (object, value_by_key) => {\r\n  //     console.log(\"passed here\");\r\n  //     var a = JSON.parse(JSON.stringify(object));\r\n  //     console.log(a.value_by_key);\r\n  //     return object.value_by_key;\r\n  //   };\r\n\r\n  //   setForEachDay = (toranim_this_week) => {\r\n  //     let week_items = [];\r\n  //     let dates = this.props.date;\r\n  //     console.log(\"rendered again\");\r\n  //     week_items.push(<th key=\"empty\">Toran</th>);\r\n  //     for (var i = 0; i < dates.length; i++) {\r\n  //       week_items.push(\r\n  //         <td key={dates[i]}>\r\n  //           <select\r\n  //             value={\r\n  //               // Object.keys(toranim_this_week).includes(dates[i])\r\n  //               //   ? toranim_this_week[dates[i]]\r\n  //               //   : \"DEFAULT\"\r\n  //               \"ffff\"\r\n  //             }\r\n  //             onChange={this.handleChange}\r\n  //             className=\"form-control\"\r\n  //           >\r\n  //             <option value=\"DEFAULT\" disabled>\r\n  //               Select Toran...{\" \"}\r\n  //             </option>\r\n  //             {addOptions(dates[i], i)}\r\n  //           </select>\r\n  //         </td>\r\n  //       );\r\n  //     }\r\n  //     week_items.push(\r\n  //       <td key=\"Yashvatz\">\r\n  //         <select onChange={this.handleChange} className=\"form-control\">\r\n  //           <option selected disabled>\r\n  //             Select Toran...{\" \"}\r\n  //           </option>\r\n  //           {addOptions(\r\n  //             \"yashvatz-\" + dates[0] + \"-\" + dates[dates.length - 1],\r\n  //             7\r\n  //           )}{\" \"}\r\n  //         </select>\r\n  //       </td>\r\n  //     );\r\n  //     console.log(week_items[0]);\r\n  //     return week_items;\r\n  //   };\r\n\r\n  //   generateHeader = (cur_date) => {\r\n  //     let header_days = [];\r\n  //     header_days.push(<th key=\"empty\"></th>);\r\n  //     for (var i = 0; i < cur_date.length + 1; i++) {\r\n  //       if (i != cur_date.length) {\r\n  //         header_days.push(\r\n  //           <th align=\"center\" className=\"toran_days\" key={cur_date[i]}>\r\n  //             {week_days[i] + \"\\n\" + cur_date[i]}\r\n  //           </th>\r\n  //         );\r\n  //       } else {\r\n  //         header_days.push(\r\n  //           <th align=\"center\" className=\"toran_days\" key=\"Yashvtaz\">\r\n  //             Weekly Yachvatz\r\n  //           </th>\r\n  //         );\r\n  //       }\r\n  //     }\r\n  //     return header_days;\r\n  //   };\r\n\r\n  //   componentDidMount() {\r\n  //     let dates = \"Ð’\";\r\n  //     // let dates = this.state.dates;\r\n  //     var url = new URL(\"http://localhost:5000/get_toranim\");\r\n  //     var params = { dates: dates };\r\n\r\n  //     url.search = new URLSearchParams(params).toString();\r\n  //     console.log(url);\r\n  //     fetch(url)\r\n  //       .then((res) => res.json())\r\n  //       .then((toran_days) => this.setState({ toran_days }));\r\n  //     // this.setState({ toranim_schedule }));\r\n  //     console.log(\"rrrrrrr\");\r\n  //   }\r\n\r\n  render() {\r\n    var cur_date = this.props.date;\r\n    console.log(\"lol\");\r\n\r\n    return (\r\n      <div>\r\n        {console.log(cur_date)}\r\n        <MDBTable striped bordered>\r\n          <MDBTableHead color=\"primary-color\">\r\n            <tr>{generateHeader(this.props.date)}</tr>\r\n          </MDBTableHead>\r\n          <MDBTableBody>{generateTable()}</MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toranim;\r\n"]},"metadata":{},"sourceType":"module"}