"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.clearLog = exports.store = exports.LifecycleVisualizerContext = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRedux = require("react-redux");

var _redux = require("redux");

var _reduxThunk = _interopRequireDefault(require("redux-thunk"));

var actionCreators = _interopRequireWildcard(require("./actionCreators"));

var _reducer = require("./reducer");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

// Context for the lifecycle-visualizer store
var LifecycleVisualizerContext = _react["default"].createContext();

exports.LifecycleVisualizerContext = LifecycleVisualizerContext;
var store = (0, _redux.createStore)(_reducer.reducer, (0, _redux.applyMiddleware)(_reduxThunk["default"]));
exports.store = store;

var clearLog = function clearLog() {
  return store.dispatch(actionCreators.clearLog());
}; // The store never changes, so we can safely export this bound function.


exports.clearLog = clearLog;

var VisualizerProvider = function VisualizerProvider(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/_react["default"].createElement(_reactRedux.Provider, {
    store: store,
    context: LifecycleVisualizerContext
  }, children);
};

VisualizerProvider.propTypes = {
  children: _propTypes["default"].element.isRequired
};
var _default = VisualizerProvider;
exports["default"] = _default;