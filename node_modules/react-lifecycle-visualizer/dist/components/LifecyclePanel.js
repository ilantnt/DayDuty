"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactRedux = require("react-redux");

var constants = _interopRequireWildcard(require("../constants"));

var _VisualizerProvider = require("../redux/VisualizerProvider");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var LifecyclePanel = function LifecyclePanel(props) {
  var componentName = props.componentName,
      isLegacy = props.isLegacy,
      instanceId = props.instanceId,
      highlightedMethod = props.highlightedMethod,
      implementedMethods = props.implementedMethods;
  var lifecycleMethodNames = isLegacy ? constants.lifecycleMethodNamesLegacyNoUnsafe : constants.lifecycleMethodNames;
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: "lifecycle-panel"
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: "lifecycle-panel-inner"
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: "component-instance"
  }, componentName + '-' + instanceId), lifecycleMethodNames.map(function (methodName) {
    return /*#__PURE__*/_react["default"].createElement(LifecycleMethod, {
      componentName: componentName,
      instanceId: instanceId,
      highlightedMethod: highlightedMethod,
      methodName: methodName,
      methodIsImplemented: implementedMethods.includes(methodName),
      key: methodName
    });
  })));
};

var isHighlighted = function isHighlighted(hlMethod, method) {
  return hlMethod !== null && hlMethod.componentName === method.componentName && hlMethod.instanceId === method.instanceId && hlMethod.methodName.startsWith(method.methodName) // for handling 'setState:update fn' & 'setState:callback'
  ;
};

var LifecycleMethod = function LifecycleMethod(props) {
  var highlightedMethod = props.highlightedMethod,
      componentName = props.componentName,
      instanceId = props.instanceId,
      methodName = props.methodName,
      methodIsImplemented = props.methodIsImplemented;
  var methodIsHighlighted = isHighlighted(highlightedMethod, {
    componentName: componentName,
    instanceId: instanceId,
    methodName: methodName
  });
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: "lifecycle-method",
    "data-is-implemented": methodIsImplemented,
    "data-is-highlighted": methodIsHighlighted
  }, methodName);
};

var mapStateToProps = function mapStateToProps(_ref) {
  var logEntries = _ref.logEntries,
      highlightedIndex = _ref.highlightedIndex;
  return {
    highlightedMethod: highlightedIndex !== null && logEntries[highlightedIndex] ? logEntries[highlightedIndex] : null
  };
};

var _default = (0, _reactRedux.connect)(mapStateToProps, null, null, {
  context: _VisualizerProvider.LifecycleVisualizerContext
})(LifecyclePanel);

exports["default"] = _default;