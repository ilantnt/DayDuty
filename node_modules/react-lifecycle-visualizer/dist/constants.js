"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEPRECATED_CLEAR_COUNTERS = exports.DEPRECATED_THIS_TRACE = exports.DEPRECATED_THIS_LIFECYCLE_PANEL = exports.sessionReplayTimerDelayKey = exports.lifecycleMethodNamesLegacyOnly = exports.lifecycleMethodNamesNewOnly = exports.lifecycleMethodNamesLegacyNoUnsafe = exports.lifecycleMethodNames = exports.MUnsafeWillUpdate = exports.MUnsafeWillReceiveProps = exports.MUnsafeWillMount = exports.MWillUpdate = exports.MWillReceiveProps = exports.MWillMount = exports.MGetSnapshot = exports.MGetDerivedState = exports.MSetState = exports.MWillUnmount = exports.MDidUpdate = exports.MRender = exports.MShouldUpdate = exports.MDidMount = exports.MConstructor = exports.delayValues = exports.shouldLogInConsole = void 0;
var shouldLogInConsole = false;
exports.shouldLogInConsole = shouldLogInConsole;
var delayValues = [0.25, 0.5, 1, 2, 5, 10];
exports.delayValues = delayValues;
var MConstructor = 'constructor';
exports.MConstructor = MConstructor;
var MDidMount = 'componentDidMount';
exports.MDidMount = MDidMount;
var MShouldUpdate = 'shouldComponentUpdate';
exports.MShouldUpdate = MShouldUpdate;
var MRender = 'render';
exports.MRender = MRender;
var MDidUpdate = 'componentDidUpdate';
exports.MDidUpdate = MDidUpdate;
var MWillUnmount = 'componentWillUnmount';
exports.MWillUnmount = MWillUnmount;
var MSetState = 'setState';
exports.MSetState = MSetState;
var MGetDerivedState = 'static getDerivedStateFromProps';
exports.MGetDerivedState = MGetDerivedState;
var MGetSnapshot = 'getSnapshotBeforeUpdate';
exports.MGetSnapshot = MGetSnapshot;
var MWillMount = 'componentWillMount';
exports.MWillMount = MWillMount;
var MWillReceiveProps = 'componentWillReceiveProps';
exports.MWillReceiveProps = MWillReceiveProps;
var MWillUpdate = 'componentWillUpdate';
exports.MWillUpdate = MWillUpdate;
var MUnsafeWillMount = 'UNSAFE_componentWillMount';
exports.MUnsafeWillMount = MUnsafeWillMount;
var MUnsafeWillReceiveProps = 'UNSAFE_componentWillReceiveProps';
exports.MUnsafeWillReceiveProps = MUnsafeWillReceiveProps;
var MUnsafeWillUpdate = 'UNSAFE_componentWillUpdate';
exports.MUnsafeWillUpdate = MUnsafeWillUpdate;
var lifecycleMethods = [{
  isLegacy: false,
  isNew: false,
  name: MConstructor
}, {
  isLegacy: true,
  isNew: false,
  name: MWillMount
}, {
  isLegacy: true,
  isNew: false,
  name: MUnsafeWillMount
}, {
  isLegacy: false,
  isNew: true,
  name: MGetDerivedState
}, {
  isLegacy: true,
  isNew: false,
  name: MWillReceiveProps
}, {
  isLegacy: true,
  isNew: false,
  name: MUnsafeWillReceiveProps
}, {
  isLegacy: false,
  isNew: false,
  name: MShouldUpdate
}, {
  isLegacy: true,
  isNew: false,
  name: MWillUpdate
}, {
  isLegacy: true,
  isNew: false,
  name: MUnsafeWillUpdate
}, {
  isLegacy: false,
  isNew: false,
  name: MRender
}, {
  isLegacy: false,
  isNew: false,
  name: MDidMount
}, {
  isLegacy: false,
  isNew: true,
  name: MGetSnapshot
}, {
  isLegacy: false,
  isNew: false,
  name: MDidUpdate
}, {
  isLegacy: false,
  isNew: false,
  name: MWillUnmount
}, {
  isLegacy: false,
  isNew: false,
  name: MSetState
}];
var lifecycleMethodNames = lifecycleMethods.filter(function (mthd) {
  return !mthd.isLegacy;
}).map(function (_ref) {
  var name = _ref.name;
  return name;
}); // We don't show 'UNSAFE_..' in the panel, but just use the shorter old names.

exports.lifecycleMethodNames = lifecycleMethodNames;
var lifecycleMethodNamesLegacyNoUnsafe = lifecycleMethods.filter(function (mthd) {
  return !mthd.isNew && !mthd.name.startsWith('UNSAFE_');
}).map(function (_ref2) {
  var name = _ref2.name;
  return name;
});
exports.lifecycleMethodNamesLegacyNoUnsafe = lifecycleMethodNamesLegacyNoUnsafe;
var lifecycleMethodNamesNewOnly = lifecycleMethods.filter(function (mthd) {
  return mthd.isNew;
}).map(function (_ref3) {
  var name = _ref3.name;
  return name;
});
exports.lifecycleMethodNamesNewOnly = lifecycleMethodNamesNewOnly;
var lifecycleMethodNamesLegacyOnly = lifecycleMethods.filter(function (mthd) {
  return mthd.isLegacy;
}).map(function (_ref4) {
  var name = _ref4.name;
  return name;
});
exports.lifecycleMethodNamesLegacyOnly = lifecycleMethodNamesLegacyOnly;
var sessionStorageKey = '@@react-lifecycle-visualizer--persistent-state:';
var sessionReplayTimerDelayKey = sessionStorageKey + 'replayTimerDelay';
exports.sessionReplayTimerDelayKey = sessionReplayTimerDelayKey;
var DEPRECATED_THIS_LIFECYCLE_PANEL = 'DEPRECATED_THIS_LIFECYCLE_PANEL';
exports.DEPRECATED_THIS_LIFECYCLE_PANEL = DEPRECATED_THIS_LIFECYCLE_PANEL;
var DEPRECATED_THIS_TRACE = 'DEPRECATED_THIS_TRACE';
exports.DEPRECATED_THIS_TRACE = DEPRECATED_THIS_TRACE;
var DEPRECATED_CLEAR_COUNTERS = 'DEPRECATED_CLEAR_COUNTERS';
exports.DEPRECATED_CLEAR_COUNTERS = DEPRECATED_CLEAR_COUNTERS;